apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jameshayward.marvelapp"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
            testApplicationId "com.jameshayward.marvelapp.mock.test"

            sourceSets {
                androidTest {
                    assets.srcDirs = ['src/androidMockTest/assets']
                }
            }
        }
        prod {
            dimension "default"
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "MARVEL_PUBLIC_KEY", getPublicKey())
            buildConfigField("String", "MARVEL_PRIVATE_KEY", getPrivateApiKey())
        }
        release {
            buildConfigField("String", "MARVEL_PUBLIC_KEY",  getPublicKey())
            buildConfigField("String", "MARVEL_PRIVATE_KEY",  getPrivateApiKey())
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

def getPublicKey() {
    def keysFile = file("keys.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    return keysProperties['MARVEL_PUBLIC_KEY']
}

def getPrivateApiKey() {
    def keysFile = file("keys.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    return keysProperties['MARVEL_PRIVATE_KEY']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.2.1'
    implementation 'androidx.navigation:navigation-ui:2.2.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'com.squareup.picasso:picasso:1.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation 'android.arch.core:core-testing:1.9.3'
    mockImplementation 'io.mockk:mockk-android:1.9.3'
    mockImplementation 'androidx.test:runner:1.2.0'
    mockImplementation 'androidx.test:rules:1.2.0'
    mockImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    mockImplementation 'androidx.test.espresso:espresso-intents:3.2.0'

    def rxJavaVersion = '2.2.9'
    def rxAndroidVersion = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    def retrofitVersion = "2.6.0"
    def okHttpLoggingInterceptorVersion = '4.0.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLoggingInterceptorVersion"

    def daggerVersion = '2.23.2'
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.google.dagger:dagger-android:2.23.2"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:2.23.2"
    kapt "com.google.dagger:dagger-android-processor:2.23.2"
    kaptAndroidTest "com.google.dagger:dagger-compiler:2.23.2"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:2.23.2"

    implementation "com.squareup.moshi:moshi-adapters:1.8.0"
    //exclude kotlin-reflect due to conflicts
    implementation ('com.squareup.moshi:moshi-kotlin:1.8.0') { exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect' }
    implementation 'androidx.paging:paging-runtime-ktx:2.1.1'
}
